from wordcloud import WordCloud
import matplotlib.pyplot as plt
import jieba
import numpy as np
from PIL import Image  # 用于加载掩码图片
from random import choice

# 示例文本数据
text_data = """
许多老年人开始使用微信与家人保持联系。

部分老年人通过抖音观看短视频消遣时间。

一些老年人使用社交媒体获取新闻资讯。

老年人普遍反映社交媒体操作复杂。

许多老年人喜欢在朋友圈分享生活照片。

部分老年人通过社交媒体学习新知识。

一些老年人使用社交媒体参与线上活动。

老年人对社交媒体的隐私保护功能不太了解。

许多老年人通过社交媒体与老朋友重新联系。

部分老年人使用社交媒体购物。

一些老年人反映社交媒体广告太多。

老年人对社交媒体的界面设计感到不适应。

许多老年人通过社交媒体了解健康知识。

部分老年人使用社交媒体参与社区活动。

一些老年人对社交媒体的功能感到困惑。

老年人普遍喜欢使用语音消息功能。

部分老年人通过社交媒体学习使用智能手机。

一些老年人反映社交媒体字体太小。

许多老年人通过社交媒体了解天气信息。

部分老年人使用社交媒体观看直播。

一些老年人对社交媒体的安全性表示担忧。

老年人普遍喜欢使用视频通话功能。

部分老年人通过社交媒体了解旅游信息。

一些老年人反映社交媒体操作步骤太多。

许多老年人通过社交媒体参与线上讲座。

部分老年人使用社交媒体记录生活。

一些老年人对社交媒体的推送内容不感兴趣。

老年人普遍喜欢使用简单的社交媒体功能。

部分老年人通过社交媒体了解政策信息。

一些老年人反映社交媒体的学习成本较高。
老年人普遍反映社交媒体操作复杂。

部分老年人对社交媒体的隐私保护功能不了解。

一些老年人对社交媒体的广告感到困扰。

老年人对社交媒体的界面设计感到不适应。

部分老年人反映社交媒体字体太小。

一些老年人对社交媒体的功能感到困惑。

老年人普遍认为社交媒体的学习成本较高。

部分老年人对社交媒体的安全性表示担忧。

一些老年人反映社交媒体的操作步骤太多。

老年人对社交媒体的推送内容不感兴趣。

部分老年人对社交媒体的使用感到焦虑。

一些老年人反映社交媒体的网络连接不稳定。

老年人普遍认为社交媒体的功能过于复杂。

部分老年人对社交媒体的更新频率感到不适应。

一些老年人反映社交媒体的帮助文档不清晰。

老年人对社交媒体的多语言支持需求较高。

部分老年人反映社交媒体的注册流程复杂。
"很多老人用微信只为看孙子朋友圈，但常因字体太小操作困难"

"60%的老年人遭遇过虚假养生文章误导，需加强信息辨识教育"

"语音消息使用率高达78%，打字困难是主因"

"广场舞视频分享成中老年女性社交新趋势"

"超4成老人因误触广告产生非理性消费"

"子女应关注父母是否过度沉迷短视频导致颈椎问题"

"老年网红账号粉丝中同龄人占比超35%"

"家庭群成为代际数字鸿沟的集中体现场域"

"老年男性更倾向新闻类APP，女性偏爱社交互动"

"超半数老人不知晓隐私设置功能"

一些老年人对社交媒体的数据使用政策不了解。
微信「关怀模式」可放大字体至常规3倍

抖音长按视频可开启「长辈字幕」功能

支付宝「长辈模式」隐藏复杂理财入口

美团设置「常用地址」避免输错定位

快手「老友专区」聚合戏曲书法内容

淘宝「代付功能」防止直接绑定银行卡

百度地图设置「语音导航音量增强」

今日头条开启「谣言过滤」开关

京东启用「一键求助」连接子女客户端

拼多多关闭「拼小圈」自动分享功能

老年人普遍认为社交媒体的操作界面不够直观。

部分老年人反映社交媒体的功能按钮太小。
老年人希望社交媒体操作更加简单。

部分老年人需要更大的字体和图标。

一些老年人希望增加语音操作功能。

老年人需要更多的隐私保护功能。

部分老年人希望减少广告推送。

一些老年人需要更清晰的帮助文档。

老年人希望增加视频教程。

部分老年人需要更多的健康资讯。

一些老年人希望增加社区互动功能。
鼓励分享老照片故事而非盲目跟风热点

每周固定时间进行家庭视频聚会

推荐书画摄影类社群激发创作欲

避免在家族群转发焦虑型文章

创建「记忆银行」账号存储人生故事

组织线上读书会降低孤独感

提醒每小时起身活动预防网络沉迷

引导关注老年大学官方账号获取课程

用K歌软件重现年轻时期经典老歌

通过VR旅游视频实现足不出户看世界
老年人需要更多的娱乐内容。

部分老年人希望增加多语言支持。

一些老年人需要更简单的注册流程。

老年人希望增加线下培训课程。

微信：适合亲友维系（使用率89%）

抖音：适老版已上线方言识别

小红书：慎用美妆滤镜引发容貌焦虑

快手：下沉市场老年用户更活跃

全民K歌：满足怀旧情感需求

美篇：适合制作电子相册回忆录

知乎：需警惕伪科学类回答

微博：信息过载易造成认知负担

糖豆：专注广场舞细分领域

学习强国：时政内容权威可靠
部分老年人需要更多的政策信息。

一些老年人希望增加旅游资讯。

老年人需要更多的亲情互动功能。

部分老年人希望增加安全提示功能。

一些老年人需要更多的学习资源。

老年人希望增加字体大小调节功能。

部分老年人需要更多的社交活动推荐。
为老年人设计更简单的操作界面。

增加大字体和大图标选项。

提供语音操作功能。

加强隐私保护功能。

减少广告推送频率。

提供清晰的帮助文档和视频教程。

增加健康资讯和养生知识。

提供社区互动和线下活动信息。

增加娱乐内容和休闲活动推荐。

提供多语言支持。

简化注册和登录流程。

提供线下培训和一对一指导。

增加政策解读和便民信息。

提供旅游资讯和出行建议。

增加亲情互动功能，如家庭群聊。

提供安全提示和防诈骗指南。

增加学习资源和在线课程。

提供字体大小和界面颜色调节功能。

增加社交活动推荐和兴趣小组。

提供老年人专属客服支持。

增加语音输入和语音播报功能。

提供老年人使用社交媒体的案例分享。

增加老年人心理健康支持功能。

提供老年人兴趣爱好的相关内容。

增加老年人社交媒体的使用反馈渠道。

提供老年人社交媒体的安全使用指南。

增加老年人社交媒体的趣味性功能。

提供老年人社交媒体的个性化推荐。

增加老年人社交媒体的互动游戏。

提供老年人社交媒体的使用数据分析。
许多人通过微信与家人和朋友保持联系。

部分用户喜欢在抖音上观看短视频消遣时间。

一些用户通过社交媒体获取新闻资讯。

许多人反映社交媒体操作复杂。

部分用户喜欢在朋友圈分享生活照片。

一些用户通过社交媒体学习新知识。

许多人使用社交媒体参与线上活动。

部分用户对社交媒体的隐私保护功能不太了解。

一些用户通过社交媒体与老朋友重新联系。

许多人使用社交媒体购物。

部分用户反映社交媒体广告太多。

一些用户对社交媒体的界面设计感到不适应。

许多人通过社交媒体了解健康知识。

部分用户使用社交媒体参与社区活动。

一些用户对社交媒体的功能感到困惑。

许多人喜欢使用语音消息功能。

部分用户通过社交媒体学习使用智能手机。

一些用户反映社交媒体字体太小。

许多人通过社交媒体了解天气信息。

部分用户使用社交媒体观看直播。

一些用户对社交媒体的安全性表示担忧。

许多人喜欢使用视频通话功能。

部分用户通过社交媒体了解旅游信息。

一些用户反映社交媒体操作步骤太多。

许多人通过社交媒体参与线上讲座。
许多人反映社交媒体操作复杂。

部分用户对社交媒体的隐私保护功能不了解。

一些用户对社交媒体的广告感到困扰。

许多人认为社交媒体的界面设计不够直观。

部分用户反映社交媒体字体太小。

一些用户对社交媒体的功能感到困惑。

许多人认为社交媒体的学习成本较高。

部分用户对社交媒体的安全性表示担忧。

一些用户反映社交媒体的操作步骤太多。

许多人认为社交媒体的推送内容不感兴趣。

"""

# 中文分词
def chinese_word_cut(text):
    return " ".join(jieba.cut(text))

# 对文本进行分词
text_cut = chinese_word_cut(text_data)

#导入停词
stop_words=open("tingci.txt",encoding="utf-8").read().split("\n")

# 加载掩码图片（老人剪影）
mask_image = np.array(Image.open("jianying.png"))  # 替换为你的图片路径
#mask_image = np.array(Image.open("pic.webp"))  # 替换为你的图片路径


# 定义温暖的颜色函数
def warm_color_func(word, font_size, position, orientation, random_state=None, **kwargs):
    # 定义温暖色调的颜色列表
    #warm_colors = ["#FF6F61", "#FFA07A", "#FFD700", "#FF8C42", "#FF4500", "#FF6347"]
    warm_colors = ["#DE6303", "#F77C01", "#FC9C08", "#FFBC3E", "#FED157", "#FF6347"]
    return choice(warm_colors)

# 生成方形词云
wordcloud = WordCloud(
    font_path="simhei.ttf",  # 设置中文字体路径
    width=1600,  # 增加宽度
    height=800,  # 增加高度
    background_color="white",  # 背景颜色为白色
    max_words=200,  # 最大词数
    collocations=False,  # 避免重复词
    color_func=warm_color_func,  # 使用自定义颜色函数
    prefer_horizontal=0.9,  # 调整词语水平排列的比例
    scale=2,  # 提高分辨率
    contour_width=0,  # 无轮廓线
    contour_color=None,  # 无轮廓颜色
    stopwords=stop_words,
    mask=mask_image,  # 不使用掩码
).generate(text_cut)

# 显示词云图
plt.figure(figsize=(10, 5), dpi=300)  # 增加画布尺寸和分辨率
plt.imshow(wordcloud, interpolation="bilinear")
plt.axis("off")  # 关闭坐标轴
plt.show()

# 保存词云图
wordcloud.to_file("square_wordcloud_high_res.png")